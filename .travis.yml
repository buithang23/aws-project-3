language: node_js
node_js:
  - 13

services:
  - docker

env:
  - POSTGRES_USERNAME=thangbv2
  - POSTGRES_PASSWORD=12345678
  - POSTGRES_HOST=postgres.cflh56asb7e2.us-east-1.rds.amazonaws.com
  - POSTGRES_DB=postgres
  - AWS_BUCKET=elasticbeanstalk-us-east-1-750532918907
  - AWS_REGION=us-east-1
  - AWS_PROFILE=default
  - JWT_SECRET=testing
  - URL=http://localhost:8100

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  - docker-compose -f docker-compose-build.yaml build --parallel

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push buithang23/reverseproxy
  - docker push buithang23/udagram-api-user
  - docker push buithang23/udagram-api-feed
  - docker push buithang23/udagram-frontend